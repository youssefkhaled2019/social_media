python manage.py sqlmigrate blog 0001
----------------------------------------
>>> python manage.py shell
from blog.models import Post
from django.contrib.auth.models import User
User.objects.all()
User.objects.first()
User.objects.filter(username='youssef')
User.objects.filter(username='youssef').first()
user=User.objects.filter(username='youssef').first()
user.id
user.pk
user=User.objects.get(id=1)
Post.objects.all()
post_1=Post(title="post 12",content="welcome",author=user)
post_1.save()
exit()
user=User.objects.filter(username='youssef').first()
post_3=Post(title="post dfdfd",content="dfdfsdfd",author_id=user.id)
post_3.save()
post_3.date_posted
post_3.author
post_3.author.email
user.post_set.all()
user.post_set.all().count()
user.post_set.create(title="",content="")

-----------------------------------------------
from django.contrib.auth.models import User
user=User.objects.filter(username='youssef').first()
user.profile
user.profile.image
user.profile.image.width
user.profile.image.url 
-----------------------------------------------
pip install Pillow
-----------------------------------------------

----------------------------------------
{{ post.date_posted |date:"F d, Y" }}
-------------------------------------------

--------------crispy-------------------
>>> pip install crispy-bootstrap4
--seting.py-----
INSTALLED_APPS = (
...
"crispy_forms",
"crispy_bootstrap4",
...
)
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap4"
CRISPY_TEMPLATE_PACK = "bootstrap4"


-----.html------
{% load crispy_forms_tags %}
{{form|crispy}}
-----------------------------------------------





runserver.bat
go.bat
openproject.bat
media/profile_pics
help.txt
help2.txt


-----------------------[logout]-------------------------------
<form action="{% url 'logout' %}" method="post">
            {% csrf_token %}
            <!-- <a class="nav-item nav-link" href="{% url 'logout' %}">Logout</a> -->
            
            <!-- <input  class="nav-item nav-link " type="submit" value="Logout"> -->
            
            <!-- <a class="nav-item nav-link "  onclick="$(this).closest('form').submit(); return false;">Logout</a> -->
            <a class="nav-item nav-link "  onclick="parentNode.submit();return false;">Logout</a>

</form>
-----------------------------
<form  class="nav-item " action="{% url 'logout' %}" method="post">
    {% csrf_token %}
    <!-- <button class="btn btn-light" type="submit">Log out</button> -->
    <!-- <input  type="submit">Log out</input> -->
    <input class="nav-link" type="submit" value="Log out" style="background: none; border: none;">
</form> 
------------------------------------------------------
   <form  class="nav-item " action="{% url 'logout' %}" method="post">
                        {% csrf_token %}
                        <!-- <button class="btn btn-light" type="submit">Log out</button> -->
                        <!-- <input  type="submit">Log out</input> -->
                        <input class="nav-link" type="submit" value="Log out" style="background: none; border: none;">
                      </form> 
------------------------------------------------------                      
      <form action="{% url 'logout' %}" method="post">
                  {% csrf_token %}
                  <!-- <a class="nav-item nav-link" href="{% url 'logout' %}">Logout</a> -->
                  
                  <!-- <input  class="nav-item nav-link " type="submit" value="Logout"> -->
                 
                  <!-- <a class="nav-item nav-link "  onclick="$(this).closest('form').submit(); return false;">Logout</a> -->
                  <a class="nav-item nav-link "  onclick="parentNode.submit();return false;">Logout</a>
                </form>
------------------------------------------------------                


------------------------------------------------------
------------------------------------------------------


--------------------------------------
python manage.py shell

>>> import json
>>> from blog.models import Post
>>> with open('posts.json') as f:  #C:\Users\you\Downloads\GitHub\Social_Media\posts.json
...   post_json = json.load(f)
...



>>> for post in post_json:
...   post = Post(title=post['title'], content=post['content'], author_id=post['user_id'])
...   post.save()
...
>>> exit()

--------------------------------------
from django.core.paginator import Paginator
posts=['1','2','3','4','5','6','7','8','9']
p=Paginator(posts,2)
p.num_pages
for i in p.page_range:
    print(i)
p1=p.page(1)     #<Page 1 of 5>
p1.number         #1
p1.object_list   #['1', '2']
p1.has_previous() #False
p1.has_next()   #True
p1.next_page_number() #2


------------------------------------------------------
------------------------views.py------------------------------ #https://stackoverflow.com/questions/74615456/how-to-add-pagination-in-django

from django.core.paginator import Paginator
from django.shortcuts import render

def car(request, category_id=None):
    products = Products.objects.all() 

    if category_id:
        products = Product.objects.filter(category__id=category_id)

    paginator = Paginator(products, 3)

    page_number = request.GET.get('page')
    page_obj = paginator.get_page(page_number)

    context = {
        'page_obj': page_obj
    }

    return render(request, 'car.html', context)
    -------------------------------tempate.html --------------------------------
    {% for car in page_obj %}
    {{ car.category }}<br>
    ...
{% endfor %}

<div class="pagination">
    <span class="step-links">
        {% if page_obj.has_previous %}
            <a href="?page=1">&laquo; first</a>
            <a href="?page={{ page_obj.previous_page_number }}">previous</a>
        {% endif %}

        <span class="current">
            Page {{ page_obj.number }} of {{ page_obj.paginator.num_pages }}.
        </span>

        {% if page_obj.has_next %}
            <a href="?page={{ page_obj.next_page_number }}">next</a>
            <a href="?page={{ page_obj.paginator.num_pages }}">last &raquo;</a>
        {% endif %}
    </span>
</div>
-----------------------------urls.py ----------------------------------
path('cars/category/<int:category_id>/', views.car, name='car'),